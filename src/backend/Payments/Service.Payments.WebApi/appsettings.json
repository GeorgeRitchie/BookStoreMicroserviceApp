{
	"ConnectionStrings": {
		"Database": "Server=(localdb)\\LocalDb22;AttachDBFilename=[DataDirectory]\\Payment.mdf;Initial Catalog=Payment;Trusted_Connection=True;MultipleActiveResultSets=true"
	},
	"ApiVersioning": {
		"DefaultApiVersion": "1.0",
		"AssumeDefaultVersionWhenUnspecified": true,
		"ReportApiVersions": true
	},
	"ApiExplorer": {
		"GroupNameFormat": "'v'VVV",
		"SubstituteApiVersionInUrl": true
	},
	"OTEL": { // OpenTelemetry Configs
		"EXPORTER": {
			"OTLP": {
				"ENDPOINT": "http://localhost:4318"
			}
		}
	},
	"Serilog": {
		"Using": [ "Serilog.Sinks.Console", "Serilog.Sinks.File" ],
		"MinimumLevel": {
			"Default": "Information",
			"Override": {
				"Microsoft": "Warning",
				// "Microsoft.EntityFrameworkCore.Database.Command": "Information", // TODO __##__ remove this on production
				"System": "Warning"
			}
		},
		"Enrich": [ "FromLogContext", "WithProperty" ],
		"Properties": {
			"ModuleName": "Payment"
		},
		"WriteTo": [
			{
				"Name": "Console",
				"Args": {
					"outputTemplate": "[{Timestamp:HH:mm:ss} {Level:u3} {ModuleName}] {Message:lj}{NewLine}{Exception}"
				}
			},
			{
				"Name": "File",
				"Args": {
					"path": "logs/ProgramLog-.txt",
					"rollingInterval": "Day",
					"rollOnFileSizeLimit": true,
					"formatter": "Serilog.Formatting.Compact.CompactJsonFormatter, Serilog.Formatting.Compact"
				}
			}
		]
	},
	"Authorization": {
		"Permissions": {
			"CacheKeyPrefix": "payment-permissions-",
			"CacheTimeInSeconds": 180
		}
	},
	"JwtBearer": {
		"Audience": "book_program",
		"Authority": "https://localhost:7078",
		"IncludeErrorDetails": true,
		"RequireHttpsMetadata": false,
		"SaveToken": true,
		"TokenValidationParameters": {
			"ValidateIssuer": true,
			"ValidIssuer": "",
			"ValidateAudience": true,
			"ValidAudience": "",
			"ValidateLifetime": true,
			"NameClaimType": "sub"
		}
	},
	"RabbitMQ": {
		"Host": "localhost",
		"VirtualHost": "/",
		"Username": "guest",
		"Password": "guest",
		"EnableRabbitMQ": true
	},
	"Redis": {
		"Configuration": "localhost:6379",
		"InstanceName": "SampleInstance",
		"EnableRedis": true
	},
	"Service": {
		"Payment": {
			"BackgroundJobs": {
				"ProcessInboxMessages": {
					"IntervalInSeconds": 1,
					"RetryCount": 3,
					"BatchSize": 50
				},
				"ProcessOutboxMessages": {
					"IntervalInSeconds": 1,
					"RetryCount": 3,
					"BatchSize": 50
				}
			},
			"WebApiOptions": {
				"EnableSwaggerUI": true
			},
			"GrpcOptions": {
				"Url": "https://example.com",
				"RetryCount": 3
			},
			"Stripe": {
				"SuccessUrlAddress": "https://localhost:7202/api/v1/payments/success", // TODO __##__ make this use to frontend page, that should make request to backend api, that page must get payment id as this: ?pid=GUID
				"FailureUrlAddress": "https://localhost:7202/api/v1/payments/failure", // TODO __##__ make this use to frontend page, that should make request to backend api, that page must get payment id as this: ?pid=GUID
				"ApiKey": "your_stripe_accout_key"
			}
		}
	},
	"AllowedHosts": "*"
}
